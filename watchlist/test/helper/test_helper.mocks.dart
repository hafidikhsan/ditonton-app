// Mocks generated by Mockito 5.1.0 from annotations
// in watchlist/test/helper/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:convert' as _i18;
import 'dart:typed_data' as _i19;

import 'package:common/common.dart' as _i10;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/src/base_request.dart' as _i20;
import 'package:http/src/client.dart' as _i17;
import 'package:http/src/response.dart' as _i3;
import 'package:http/src/streamed_response.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie/domain/entities/movie.dart' as _i11;
import 'package:movie/domain/entities/movie_detail.dart' as _i12;
import 'package:movie/domain/repositories/movie_repository.dart' as _i9;
import 'package:series/domain/entities/episodes.dart' as _i16;
import 'package:series/domain/entities/series.dart' as _i14;
import 'package:series/domain/entities/series_detail.dart' as _i15;
import 'package:series/domain/repositories/series_repository.dart' as _i13;
import 'package:sqflite/sqflite.dart' as _i7;
import 'package:watchlist/data/models/database_model.dart' as _i8;
import 'package:watchlist/watchlist.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeResponse_1 extends _i1.Fake implements _i3.Response {}

class _FakeStreamedResponse_2 extends _i1.Fake implements _i4.StreamedResponse {
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i5.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i7.Database?> get database => (super.noSuchMethod(
      Invocation.getter(#database),
      returnValue: Future<_i7.Database?>.value()) as _i6.Future<_i7.Database?>);
  @override
  _i6.Future<int> insertWatchlist(_i8.DatabaseModel? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> removeWatchlist(_i8.DatabaseModel? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlist() => (super.noSuchMethod(
      Invocation.method(#getWatchlist, []),
      returnValue: Future<List<Map<String, dynamic>>>.value(
          <Map<String, dynamic>>[])) as _i6.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i9.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>
      getNowPlayingMovies() => (super.noSuchMethod(
          Invocation.method(#getNowPlayingMovies, []),
          returnValue: Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
              _FakeEither_0<_i10.Failure, List<_i11.Movie>>())) as _i6
          .Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
          returnValue: Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
              _FakeEither_0<_i10.Failure, List<_i11.Movie>>())) as _i6
          .Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
              _FakeEither_0<_i10.Failure, List<_i11.Movie>>())) as _i6
          .Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, _i12.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
          returnValue: Future<_i2.Either<_i10.Failure, _i12.MovieDetail>>.value(
              _FakeEither_0<_i10.Failure, _i12.MovieDetail>())) as _i6
          .Future<_i2.Either<_i10.Failure, _i12.MovieDetail>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>
      getMovieRecommendations(int? id) => (super.noSuchMethod(
          Invocation.method(#getMovieRecommendations, [id]),
          returnValue: Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
              _FakeEither_0<_i10.Failure, List<_i11.Movie>>())) as _i6
          .Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
          returnValue: Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
              _FakeEither_0<_i10.Failure, List<_i11.Movie>>())) as _i6
          .Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, String>> saveWatchlist(
          _i12.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>()))
          as _i6.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, String>> removeWatchlist(
          _i12.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>()))
          as _i6.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i5.Database>>> getWatchlist() =>
      (super.noSuchMethod(Invocation.method(#getWatchlist, []),
              returnValue:
                  Future<_i2.Either<_i10.Failure, List<_i5.Database>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i5.Database>>()))
          as _i6.Future<_i2.Either<_i10.Failure, List<_i5.Database>>>);
}

/// A class which mocks [SeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesRepository extends _i1.Mock implements _i13.SeriesRepository {
  MockSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i14.Series>>>
      getNowPlayingSeries() =>
          (super.noSuchMethod(Invocation.method(#getNowPlayingSeries, []),
                  returnValue:
                      Future<_i2.Either<_i10.Failure, List<_i14.Series>>>.value(
                          _FakeEither_0<_i10.Failure, List<_i14.Series>>()))
              as _i6.Future<_i2.Either<_i10.Failure, List<_i14.Series>>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i14.Series>>> getPopularSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularSeries, []),
              returnValue:
                  Future<_i2.Either<_i10.Failure, List<_i14.Series>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i14.Series>>()))
          as _i6.Future<_i2.Either<_i10.Failure, List<_i14.Series>>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i14.Series>>> getTopRatedSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedSeries, []),
              returnValue:
                  Future<_i2.Either<_i10.Failure, List<_i14.Series>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i14.Series>>()))
          as _i6.Future<_i2.Either<_i10.Failure, List<_i14.Series>>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, _i15.SeriesDetail>> getSeriesDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getSeriesDetail, [id]),
              returnValue:
                  Future<_i2.Either<_i10.Failure, _i15.SeriesDetail>>.value(
                      _FakeEither_0<_i10.Failure, _i15.SeriesDetail>()))
          as _i6.Future<_i2.Either<_i10.Failure, _i15.SeriesDetail>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i14.Series>>>
      getSeriesRecommendations(int? id) => (super.noSuchMethod(
              Invocation.method(#getSeriesRecommendations, [id]),
              returnValue:
                  Future<_i2.Either<_i10.Failure, List<_i14.Series>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i14.Series>>()))
          as _i6.Future<_i2.Either<_i10.Failure, List<_i14.Series>>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i16.Episodes>>> getSeriesEpisodes(
          int? id, int? seasons) =>
      (super.noSuchMethod(Invocation.method(#getSeriesEpisodes, [id, seasons]),
              returnValue:
                  Future<_i2.Either<_i10.Failure, List<_i16.Episodes>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i16.Episodes>>()))
          as _i6.Future<_i2.Either<_i10.Failure, List<_i16.Episodes>>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i14.Series>>> searchSeries(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchSeries, [query]),
              returnValue:
                  Future<_i2.Either<_i10.Failure, List<_i14.Series>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i14.Series>>()))
          as _i6.Future<_i2.Either<_i10.Failure, List<_i14.Series>>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, String>> saveWatchlist(
          _i15.SeriesDetail? series) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [series]),
              returnValue: Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>()))
          as _i6.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, String>> removeWatchlist(
          _i15.SeriesDetail? series) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [series]),
              returnValue: Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>()))
          as _i6.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i17.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<_i3.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<_i3.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<_i3.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<_i3.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<_i3.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i19.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i19.Uint8List>.value(_i19.Uint8List(0)))
          as _i6.Future<_i19.Uint8List>);
  @override
  _i6.Future<_i4.StreamedResponse> send(_i20.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i4.StreamedResponse>.value(_FakeStreamedResponse_2()))
          as _i6.Future<_i4.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
